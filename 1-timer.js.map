{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport errorIcon from '../img/bi_x-octagon.svg';\n\nconst myInput = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\n\nstartBtn.disabled = true;\n\nlet userSelectedDate;\n\nconst fp = flatpickr(myInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < new Date()) {\n      startBtn.disabled = true;\n      return iziToast.show({\n        message: 'Please choose a date in the future',\n        backgroundColor: 'rgba(207, 15, 15, 1)',\n        position: 'topRight',\n        width: 302,\n        messageColor: 'white',\n        iconUrl: errorIcon,\n        theme: 'dark',\n        close: false,\n      });\n    }\n    startBtn.disabled = false;\n  },\n});\n\nstartBtn.addEventListener('click', handlerClick);\nfunction handlerClick() {\n  myInput.disabled = true;\n  startBtn.disabled = true;\n  const id = setInterval(() => {\n    const diff = userSelectedDate - new Date();\n    if (diff < 0) {\n      clearInterval(id);\n      myInput.disabled = false;\n      return;\n    }\n    const timeDiff = convertMs(diff);\n    dataDays.textContent = addLeadingZero(timeDiff.days);\n    dataHours.textContent = addLeadingZero(timeDiff.hours);\n    dataMinutes.textContent = addLeadingZero(timeDiff.minutes);\n    dataSeconds.textContent = addLeadingZero(timeDiff.seconds);\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(number) {\n  return String(number).padStart(2, '0');\n}"],"names":["myInput","startBtn","dataDays","dataHours","dataMinutes","dataSeconds","userSelectedDate","flatpickr","selectedDates","iziToast","errorIcon","handlerClick","id","diff","timeDiff","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","number"],"mappings":"iJAMA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DJ,EAAS,SAAW,GAEpB,IAAIK,EAEOC,EAAUP,EAAS,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQQ,EAAe,CAErB,GADAF,EAAmBE,EAAc,CAAC,EAC9BF,EAAmB,IAAI,KACzB,OAAAL,EAAS,SAAW,GACbQ,EAAS,KAAK,CACnB,QAAS,qCACT,gBAAiB,uBACjB,SAAU,WACV,MAAO,IACP,aAAc,QACd,QAASC,EACT,MAAO,OACP,MAAO,EACf,CAAO,EAEHT,EAAS,SAAW,EACrB,CACH,CAAC,EAEDA,EAAS,iBAAiB,QAASU,CAAY,EAC/C,SAASA,GAAe,CACtBX,EAAQ,SAAW,GACnBC,EAAS,SAAW,GACpB,MAAMW,EAAK,YAAY,IAAM,CAC3B,MAAMC,EAAOP,EAAmB,IAAI,KACpC,GAAIO,EAAO,EAAG,CACZ,cAAcD,CAAE,EAChBZ,EAAQ,SAAW,GACnB,MACD,CACD,MAAMc,EAAWC,EAAUF,CAAI,EAC/BX,EAAS,YAAcc,EAAeF,EAAS,IAAI,EACnDX,EAAU,YAAca,EAAeF,EAAS,KAAK,EACrDV,EAAY,YAAcY,EAAeF,EAAS,OAAO,EACzDT,EAAY,YAAcW,EAAeF,EAAS,OAAO,CAC1D,EAAE,GAAI,CACT,CAEA,SAASC,EAAUE,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAQ,CAC9B,OAAO,OAAOA,CAAM,EAAE,SAAS,EAAG,GAAG,CACvC"}